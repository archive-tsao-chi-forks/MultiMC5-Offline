From 0da707db38e46c1905bc3796365c04f04dff7ddc Mon Sep 17 00:00:00 2001
From: Zakhar Afonin <afoninz@localhost.localdomain>
Date: Fri, 8 May 2020 21:07:34 +0300
Subject: [PATCH] Base offline patch

fixed QCryptographicHash not included

separating real offline from cracked

cryptographic hash shit yet again

i can't C++

why the fuck there is no bool ok
---
 api/logic/minecraft/MinecraftInstance.cpp |  3 ++-
 api/logic/minecraft/auth/AuthSession.cpp  | 15 +++++++++++++++
 api/logic/minecraft/auth/AuthSession.h    |  1 +
 application/LaunchController.cpp          | 23 ++++++++++++++++++++++-
 4 files changed, 40 insertions(+), 2 deletions(-)

diff --git a/api/logic/minecraft/MinecraftInstance.cpp b/api/logic/minecraft/MinecraftInstance.cpp
index 5fda2f4b..4f04d950 100644
--- a/api/logic/minecraft/MinecraftInstance.cpp
+++ b/api/logic/minecraft/MinecraftInstance.cpp
@@ -826,7 +826,8 @@ shared_qobject_ptr<LaunchTask> MinecraftInstance::createLaunchTask(AuthSessionPt
     }
     else
     {
-        process->appendStep(new Update(pptr, Net::Mode::Offline));
+        process->appendStep(new Update(pptr, Net::Mode::Online));
+        // TODO: Separate "cracked" logins (offline from auth servers) from genuine offline logins (no internet)
     }
 
     // if there are any jar mods
diff --git a/api/logic/minecraft/auth/AuthSession.cpp b/api/logic/minecraft/auth/AuthSession.cpp
index 4e858796..1a6ab177 100644
--- a/api/logic/minecraft/auth/AuthSession.cpp
+++ b/api/logic/minecraft/auth/AuthSession.cpp
@@ -3,6 +3,7 @@
 #include <QJsonArray>
 #include <QJsonDocument>
 #include <QStringList>
+#include <QCryptographicHash>
 
 QString AuthSession::serializeUserProperties()
 {
@@ -28,3 +29,17 @@ bool AuthSession::MakeOffline(QString offline_playername)
     status = PlayableOffline;
     return true;
 }
+
+bool AuthSession::MakeCracked(QString offline_playername)
+{
+    session = "-";
+    // Filling session with dummy data
+    client_token = "ff64ff64ff64ff64ff64ff64ff64ff64";
+    access_token = "ff64ff64ff64ff64ff64ff64ff64ff64";
+    // TODO: Fetch actual UUID's from Mojang API so they match with real ones
+    uuid = QString(QCryptographicHash::hash(offline_playername.toLocal8Bit(), QCryptographicHash::Md5).toHex());
+
+    player_name = offline_playername;
+    status = PlayableOffline;
+    return true;
+}
\ No newline at end of file
diff --git a/api/logic/minecraft/auth/AuthSession.h b/api/logic/minecraft/auth/AuthSession.h
index b397d9a1..02c7eb47 100644
--- a/api/logic/minecraft/auth/AuthSession.h
+++ b/api/logic/minecraft/auth/AuthSession.h
@@ -17,6 +17,7 @@ struct User
 struct MULTIMC_LOGIC_EXPORT AuthSession
 {
     bool MakeOffline(QString offline_playername);
+    bool MakeCracked(QString offline_playername);
 
     QString serializeUserProperties();
 
diff --git a/application/LaunchController.cpp b/application/LaunchController.cpp
index bebc3db1..dcdee4af 100644
--- a/application/LaunchController.cpp
+++ b/application/LaunchController.cpp
@@ -36,6 +36,27 @@ void LaunchController::login()
 {
     JavaCommon::checkJVMArgs(m_instance->settings()->get("JvmArgs").toString(), m_parentWidget);
 
+    // Mojang account login bypass
+    bool ok = false;
+    QString usedname = "Player";
+    QString name = QInputDialog::getText(m_parentWidget, tr("Player name"),
+                                         tr("Choose your offline mode player name."),
+                                         QLineEdit::Normal, "Player", &ok);
+    if (!ok)
+    {
+        return;
+    }
+    if (name.length())
+    {
+        usedname = name;
+    }
+    m_session = std::make_shared<AuthSession>();
+    m_session->MakeCracked(usedname);
+
+    launchInstance();
+
+    // Original login code
+    /*
     // Find an account to use.
     std::shared_ptr<MojangAccountList> accounts = MMC->accounts();
     MojangAccountPtr account = accounts->activeAccount();
@@ -182,7 +203,7 @@ void LaunchController::login()
         }
         }
     }
-    emitFailed(tr("Failed to launch."));
+    emitFailed(tr("Failed to launch."));*/
 }
 
 void LaunchController::launchInstance()
-- 
2.29.2.windows.2

